// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

// schema.prisma
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  id              String    @id @default(uuid())
  username        String    @unique
  password        String
  email           String    @unique
  firstName       String
  lastName        String
  status          Boolean
  friends         User[]    @relation("UserFriends")
  friendOf        User[]    @relation("UserFriends")
  messagesSent    Message[] @relation("SentMessages")
  messagesReceived Message[] @relation("ReceivedMessages")
}

model Message {
  id          String   @id @default(uuid())
  senderId    String
  receiverId  String
  message     String
  createdAt   DateTime @default(now())
  sender      User     @relation(fields: [senderId], references: [id], name: "SentMessages")
  receiver    User     @relation(fields: [receiverId], references: [id], name: "ReceivedMessages")
}

model notification{
  id  String   @id @default(uuid())
  type String
  content String
  senderId String
  recieverId String
  sender User @relation(fields: [senderId], references: [id], name: "sender")
  reciever User @relation(fields: [recieverId], references: [id], name: "recuever")
  read            Boolean  @default(false)
  createdAt       DateTime @default(now()) @map("createdAt")
  expiresAfter    DateTime @default(now()) @map("expiresAfter")
  updatedAt       DateTime @updatedAt

}